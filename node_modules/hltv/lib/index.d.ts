import HLTVConfig from './models/HLTVConfig';
export declare class HLTVFactory {
    private readonly config;
    constructor(config: HLTVConfig);
    connectToScorebot: ({ id, onScoreboardUpdate, onLogUpdate, onConnect, onDisconnect }: import("endpoints/connectToScorebot").ConnectToScorebotParams) => Promise<void>;
    getMatch: ({ id }: {
        id: number;
    }) => Promise<FullMatch>;
    getMatches: () => Promise<(UpcomingMatch | LiveMatch)[]>;
    getMatchesStats: ({ startDate, endDate, matchType, maps }?: import("endpoints/getMatchesStats").GetMatchesStatsParams) => Promise<MatchStats[]>;
    getMatchMapStats: ({ id }: {
        id: number;
    }) => Promise<FullMatchMapStats>;
    getRecentThreads: () => Promise<Thread[]>;
    getResults: ({ pages }?: {
        pages?: number | undefined;
    }) => Promise<MatchResult[]>;
    getStreams: ({ loadLinks }?: {
        loadLinks?: boolean | undefined;
    }) => Promise<FullStream[]>;
    getTeamRanking: ({ year, month, day, country }?: {
        year?: string | undefined;
        month?: string | undefined;
        day?: string | undefined;
        country?: string | undefined;
    }) => Promise<TeamRanking[]>;
    getTeam: ({ id }: {
        id: number;
    }) => Promise<FullTeam>;
    getTeamStats: ({ id }: {
        id: number;
    }) => Promise<FullTeamStats>;
    getPlayer: ({ id }: {
        id: number;
    }) => Promise<FullPlayer>;
    getEvent: ({ id }: {
        id: number;
    }) => Promise<import("models/FullEvent").default>;
    createInstance(config: HLTVConfig): HLTVFactory;
}
declare const hltvInstance: HLTVFactory;
export default hltvInstance;
export { hltvInstance as HLTV };
import FullMatch from './models/FullMatch';
import FullMatchMapStats from './models/FullMatchMapStats';
import FullStream from './models/FullStream';
import LiveMatch from './models/LiveMatch';
import LogUpdate from './models/LogUpdate';
import ScoreboardUpdate from './models/ScoreboardUpdate';
import TeamRanking from './models/TeamRanking';
import UpcomingMatch from './models/UpcomingMatch';
import MatchResult from './models/MatchResult';
import MatchStats from './models/MatchStats';
import MatchType from './enums/MatchType';
import Thread from './models/Thread';
import Map from './enums/Map';
import FullTeam from './models/FullTeam';
import FullTeamStats from './models/FullTeamStats';
import FullPlayer from './models/FullPlayer';
export { FullMatch, FullMatchMapStats, Map, FullStream, LiveMatch, LogUpdate, ScoreboardUpdate, TeamRanking, UpcomingMatch, MatchResult, MatchStats, MatchType, Thread, FullTeam, FullTeamStats, FullPlayer };
